import json
import os
from setuptools import setup
import urllib.request


def get_commit_hash(branch="master"):
    project_id = 2060 # tcm/tipsi project ID
    remote_location = "https://gitlab.science.ru.nl/api/v4/projects/{}/repository/branches/{}".format(project_id, branch)
    with urllib.request.urlopen(remote_location) as r:
        reply = json.load(r)
    return reply["commit"]["id"]

def get_version(commit):
    remote_location = "https://gitlab.science.ru.nl/tcm/tipsi/-/raw/{}/setup.py".format(commit)
    with urllib.request.urlopen(remote_location) as r:
        contents = r.read().decode("utf-8")
    [line] = list(filter(lambda x: "version=" in x, contents.split('\n')))
    return line.strip(' ').strip(',').strip("version=").strip("'")

def download_tipsi_builder_module(commit):
    remote_location = "https://gitlab.science.ru.nl/tcm/tipsi/-/raw/{}/tipsi/builder.py".format(commit)
    with urllib.request.urlopen(remote_location) as r:
        contents = r.read()
    pwd = os.path.dirname(os.path.realpath(__file__))
    with open(os.path.join(pwd, "tipsi", "builder.py"), "wb") as out:
        out.write(contents)

def create_init_module(commit, version):
    pwd = os.path.dirname(os.path.realpath(__file__))
    with open(os.path.join(pwd, "tipsi", "__init__.py"), "w") as out:
        out.write("# DO NOT MODIFY\n")
        out.write("# This file is automatically generated by setup.py\n")
        out.write("\n")
        out.write("from .builder import *\n")
        out.write("__commit__ = '{}'\n".format(commit))
        out.write("__version__ = '{}'\n".format(version))


commit = get_commit_hash()
version = get_version(commit)
download_tipsi_builder_module(commit)
create_init_module(commit, version)
setup(
    name="tipsi",
    version=version,
    description="TiPSi builder module",
    packages=["tipsi"],
    install_requires=["numpy", "scipy", "matplotlib", "h5py"],
    zip_safe=True,
)
